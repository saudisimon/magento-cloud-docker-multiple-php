version: "3"
services:
  nginx:
    build:
      context: ./build/nginx
    image: nginx-mage:v1.0
    hostname: nginx
    volumes:
      - ./conf/php/php81-c2/nginx/conf.d:/etc/nginx/conf.d # change php81-c2 folder name if use another php version
      - ./conf/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
      - ./sources:/home/public_html
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    links:
      - varnish
    networks:
      - appnet

  php70:
    build:
      context: ./build/php70
      args:
        ACCOUNT_USERNAME: ${ACCOUNT_USERNAME}
    image: php7.0-mage:v1.0
    hostname: php70
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./sources:/home/public_html
      - composer_cache:/home/nginx/.composer
      - ./conf/php/php70/magento.conf:/etc/php/7.0/fpm/pool.d/www.conf
      - ./conf/php/php70/php.ini:/etc/php/7.0/fpm/php.ini
      - ./conf/php/php70/php.ini:/etc/php/7.0/cli/php.ini
      - ./build/php/.ssh:/home/nginx/.ssh
      - ./build/php/.bash_aliases:/home/nginx/.bash_aliases
      - ./build/php/cmd:/usr/local/bin/
      - /var/run/docker.sock:/var/run/docker.sock
    #expose: # comment if run xdebug debug on the same device
      #- "9000" # comment if run xdebug debug on the same device
    #ports: # comment if run xdebug debug on the same device
      #- "9000:9000" # comment if run xdebug debug on the same device
    networks:
      - appnet

  php71:
    build:
      context: ./build/php71
      args:
        ACCOUNT_USERNAME: ${ACCOUNT_USERNAME}
    image: php7.1-mage:v1.0
    hostname: php71
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./sources:/home/public_html
      - composer_cache:/home/nginx/.composer
      - ./conf/php/php71/magento.conf:/etc/php/7.1/fpm/pool.d/www.conf
      - ./conf/php/php71/php.ini:/etc/php/7.1/fpm/php.ini
      - ./conf/php/php71/php.ini:/etc/php/7.1/cli/php.ini
      - ./build/php/.ssh:/home/nginx/.ssh
      - ./build/php/.bash_aliases:/home/nginx/.bash_aliases
      - ./build/php/cmd:/usr/local/bin/
      - /var/run/docker.sock:/var/run/docker.sock
    #expose: # comment if run xdebug debug on the same device
      #- "9000" # comment if run xdebug debug on the same device
    #ports: # comment if run xdebug debug on the same device
      #- "9000:9000" # comment if run xdebug debug on the same device
    networks:
      - appnet


  php72:
    build:
      context: ./build/php72
      args:
        ACCOUNT_USERNAME: ${ACCOUNT_USERNAME}
    image: php7.2-mage:v1.0
    hostname: php72
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./sources:/home/public_html
      - composer_cache:/home/nginx/.composer
      - ./conf/php/php72/magento.conf:/etc/php/7.2/fpm/pool.d/www.conf
      - ./conf/php/php72/php.ini:/etc/php/7.2/fpm/php.ini
      - ./conf/php/php72/php.ini:/etc/php/7.2/cli/php.ini
      - ./build/php/.ssh:/home/nginx/.ssh
      - ./build/php/.bash_aliases:/home/nginx/.bash_aliases
      - ./build/php/cmd:/usr/local/bin/
      - /var/run/docker.sock:/var/run/docker.sock
    #expose: # comment if run xdebug debug on the same device
      #- "9000" # comment if run xdebug debug on the same device
    #ports: # comment if run xdebug debug on the same device
      #- "9000:9000" # comment if run xdebug debug on the same device
    networks:
      - appnet

  php73:
    build:
      context: ./build/php73
      args:
        ACCOUNT_USERNAME: ${ACCOUNT_USERNAME}
    image: php7.3-mage:v1.0
    hostname: php73
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./sources:/home/public_html
      - composer_cache:/home/nginx/.composer
      - ./conf/php/php73/magento.conf:/etc/php/7.3/fpm/pool.d/www.conf
      - ./conf/php/php73/php.ini:/etc/php/7.3/fpm/php.ini
      - ./conf/php/php73/php.ini:/etc/php/7.3/cli/php.ini
      - ./build/php/.ssh:/home/nginx/.ssh
      - ./build/php/.bash_aliases:/home/nginx/.bash_aliases
      - ./build/php/cmd:/usr/local/bin/
      - /var/run/docker.sock:/var/run/docker.sock
    #expose: # comment if run xdebug debug on the same device
      #- "9000" # comment if run xdebug debug on the same device
    #ports: # comment if run xdebug debug on the same device
      #- "9000:9000" # comment if run xdebug debug on the same device
    networks:
      - appnet

  php74:
    build:
      context: ./build/php74
      args:
        ACCOUNT_USERNAME: ${ACCOUNT_USERNAME}
    image: php7.4-mage:v1.0
    hostname: php74
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./sources:/home/public_html
      - composer_cache:/home/nginx/.composer
      - ./conf/php/php74/magento.conf:/etc/php/7.4/fpm/pool.d/www.conf
      - ./conf/php/php74/php.ini:/etc/php/7.4/fpm/php.ini
      - ./conf/php/php74/php.ini:/etc/php/7.4/cli/php.ini
      - ./build/php/.ssh:/home/nginx/.ssh
      - ./build/php/.bash_aliases:/home/nginx/.bash_aliases
      - ./build/php/cmd:/usr/local/bin/
      - /var/run/docker.sock:/var/run/docker.sock
    #expose: # comment if run xdebug debug on the same device
      #- "9003" # comment if run xdebug debug on the same device
    #ports: # comment if run xdebug debug on the same device
      #- "9003:9003" # comment if run xdebug debug on the same device
    networks:
      - appnet

  php74-c2:
    build:
      context: ./build/php74-c2
      args:
        ACCOUNT_USERNAME: ${ACCOUNT_USERNAME}
    image: php7.4-c2-mage:v1.0
    hostname: php74-c2
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./sources:/home/public_html
      - composer_cache:/home/nginx/.composer
      - ./conf/php/php74-c2/magento.conf:/etc/php/7.4/fpm/pool.d/www.conf
      - ./conf/php/php74-c2/php.ini:/etc/php/7.4/fpm/php.ini
      - ./conf/php/php74-c2/php.ini:/etc/php/7.4/cli/php.ini
      - ./build/php/.ssh:/home/nginx/.ssh
      - ./build/php/.bash_aliases:/home/nginx/.bash_aliases
      - ./build/php/cmd:/usr/local/bin/
      - /var/run/docker.sock:/var/run/docker.sock
    #expose: # comment if run xdebug debug on the same device
      #- "9003" # comment if run xdebug debug on the same device
    #ports: # comment if run xdebug debug on the same device
      #- "9003:9003" # comment if run xdebug debug on the same device
    networks:
      - appnet

  php81-c2:
    build:
      context: ./build/php81-c2
      args:
        ACCOUNT_USERNAME: ${ACCOUNT_USERNAME}
    image: php8.1-c2-mage:v1.0
    hostname: php81-c2
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./sources:/home/public_html
      - composer_cache:/home/nginx/.composer
      - ./conf/php/php81-c2/magento.conf:/etc/php/8.1/fpm/pool.d/www.conf
      - ./conf/php/php81-c2/php.ini:/etc/php/8.1/fpm/php.ini
      - ./conf/php/php81-c2/php.ini:/etc/php/8.1/cli/php.ini
      - ./build/php/.ssh:/home/nginx/.ssh
      - ./build/php/.bash_aliases:/home/nginx/.bash_aliases
      - ./build/php/cmd:/usr/local/bin/
      - /var/run/docker.sock:/var/run/docker.sock
    #expose: # comment if run xdebug debug on the same device
      #- "9003" # comment if run xdebug debug on the same device
    #ports: # comment if run xdebug debug on the same device
      #- "9003:9003" # comment if run xdebug debug on the same device
    networks:
      - appnet

  mysql:
    hostname: mysql
    image: mysql:${MYSQL_VERSION}
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./conf/mysql/conf.d:/etc/mysql/conf.d
    ports:
      - 3308:3306
    networks:
      - appnet

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    links:
      - nginx
    networks:
      - appnet

  redis:
      image: "redis:6.0-alpine"
      ports:
        - "127.0.0.1:6379:6379"
      sysctls:
        - "net.core.somaxconn=65535"
      volumes:
        - "redis_data:/data"
      links:
        - nginx
      networks:
        - appnet

  elasticsearch:
      build:
        context: ./build/elasticsearch
        args: 
          ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
      image: elasticsearch-manual:${ELASTICSEARCH_VERSION}
      environment:
          - discovery.type=single-node
          - node.name=elasticseach
          - cluster.name=es-docker-cluster
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      ulimits:
          memlock:
              soft: -1
              hard: -1
      volumes:
          - elasticsearch-data:/usr/share/elasticsearch/data
      ports:
          - 9200:9200
      networks:
          - appnet

  kibana:
      image: kibana:${ELASTICSEARCH_VERSION}
      environment:
          SERVER_NAME: kibana
          ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      depends_on:
          - elasticsearch
      ports:
          - 5601:5601
      networks:
          - appnet

  rabbitmq:
      image: rabbitmq:3-management-alpine
      volumes:
          - rabbitmq-data:/var/lib/rabbitmq/
      environment:
          RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
          RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
          RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      ports:
          - 5672:5672
          - 15672:15672
      networks:
          - appnet

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - appnet

  phpredmin:
      image: sasanrose/phpredmin
      environment:
          - PHPREDMIN_DATABASE_REDIS_0_HOST=redis
      ports:
          - "8081:80"
      depends_on:
          - redis
      networks:
          - appnet

  varnish:
    build:
      context: ./build/varnish
    image: varnish-6.0:v1
    hostname: varnish
    ports:
      - 6081:6081
    volumes:
      - ./conf/varnish/default.vcl:/etc/varnish/default.vcl
    networks:
      - appnet


volumes: 
  composer_cache:
  composer_cache_file:
  elasticsearch-data:
  redis_data:
  rabbitmq-data:
networks:
  appnet:
    driver: "bridge"
